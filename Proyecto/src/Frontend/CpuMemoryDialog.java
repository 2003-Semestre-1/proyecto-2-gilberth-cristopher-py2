/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Frontend;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author jimon
 */
public class CpuMemoryDialog extends javax.swing.JDialog {

    private int[] CpuMemorySize;
    /**
     * Creates new form CpuMemoryDialog
     */
    public CpuMemoryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        Cpu1TextField.setColumns(11);
        Cpu2TextField.setColumns(11);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cpu1TextField = new javax.swing.JTextField();
        Cpu2TextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusable(false);
        setUndecorated(true);

        Cpu1TextField.setText("CPU#1 memory size");
        Cpu1TextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Cpu1TextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Cpu1TextFieldFocusLost(evt);
            }
        });
        Cpu1TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Cpu1TextFieldKeyTyped(evt);
            }
        });

        Cpu2TextField.setText("CPU#2 memory size");
        Cpu2TextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Cpu2TextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Cpu2TextFieldFocusLost(evt);
            }
        });
        Cpu2TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cpu2TextFieldActionPerformed(evt);
            }
        });
        Cpu2TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Cpu2TextFieldKeyTyped(evt);
            }
        });

        jLabel1.setText("CPU#1 Memory Size");

        jLabel2.setText("CPU#2 Memory Size");

        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(Cpu2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Cpu1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Cpu1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Cpu2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cpu1MemoryString = Cpu1TextField.getText();
        String cpu2MemoryString = Cpu2TextField.getText();
      
        if(!cpu1MemoryString.equals("CPU#1 memory size") &&  !cpu2MemoryString.equals("CPU#2 memory size")){
            int num1 = Integer.parseInt(Cpu1TextField.getText());
            int num2 = Integer.parseInt(Cpu2TextField.getText());
            CpuMemorySize = new int[]{num1, num2};
            if(num1>9 && num2>9){
                dispose();
            }else{
                JOptionPane.showMessageDialog(this, "The entered value must be greater than 10", "Invalid value", JOptionPane.ERROR_MESSAGE);
            }
        }else{JOptionPane.showMessageDialog(this, "The entered value cannot be empty", "Invalid value", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Cpu1TextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cpu1TextFieldFocusGained
        if (Cpu1TextField.getText().equals("CPU#1 memory size")){
            Cpu1TextField.setText("");
            Cpu1TextField.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_Cpu1TextFieldFocusGained

    private void Cpu1TextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cpu1TextFieldFocusLost
        if (Cpu1TextField.getText().equals("")){
            Cpu1TextField.setText("CPU#1 memory size");
            Cpu1TextField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_Cpu1TextFieldFocusLost

    
    
    private void Cpu2TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cpu2TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Cpu2TextFieldActionPerformed

    private void Cpu1TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cpu1TextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_Cpu1TextFieldKeyTyped

    private void Cpu2TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cpu2TextFieldKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_Cpu2TextFieldKeyTyped

    private void Cpu2TextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cpu2TextFieldFocusGained
        if (Cpu2TextField.getText().equals("CPU#2 memory size")){
            Cpu2TextField.setText("");
            Cpu2TextField.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_Cpu2TextFieldFocusGained

    private void Cpu2TextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cpu2TextFieldFocusLost

        if (Cpu2TextField.getText().equals("")){
            System.out.println("What");
            Cpu2TextField.setText("CPU#2 memory size");
            Cpu2TextField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_Cpu2TextFieldFocusLost

    public int[] getCpuMemorySize(){return CpuMemorySize;}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CpuMemoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CpuMemoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CpuMemoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CpuMemoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CpuMemoryDialog dialog = new CpuMemoryDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cpu1TextField;
    private javax.swing.JTextField Cpu2TextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
