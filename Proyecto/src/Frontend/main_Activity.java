/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.CPUController;
import Backend.CPUListener;
import Models.Instruction;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.xml.sax.Attributes;

/**
 *
 * @author jimon
 */
public class main_Activity extends javax.swing.JFrame implements CPUListener {


    private int currentInstructionPosition=0;
    private CPUController CPU1;
    private CPUController CPU2;
    private boolean active = false;
    private int screenUsed = 0;
    
    
    /**
     * Creates new form main_Activity
     */
    public main_Activity() {
        initComponents();
        
        textfieldMemorySize.setForeground(new Color(153,153,153));
        CPU1 = new CPUController(getPanelComponents());
        CPU2 = new CPUController(getSecondPanelComponents());
        CPU1.addListener(this);
        CPU2.addListener(this);
        CPU1.setCPUName("CPU1");
        CPU2.setCPUName("CPU2");
        btnUploadFile.setEnabled(false);
        btnExecute.setEnabled(false);
        btnClean.setEnabled(false);
        btnAutoExecute.setEnabled(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textfieldMemorySize = new javax.swing.JTextField();
        btnEnterMemorySize = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnExecute = new javax.swing.JButton();
        btnUploadFile = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jCPU2Instruccion = new javax.swing.JTable();
        jpanelCPU1 = new javax.swing.JPanel();
        lblPC = new javax.swing.JLabel();
        lblIR = new javax.swing.JLabel();
        lblAC = new javax.swing.JLabel();
        lblAX = new javax.swing.JLabel();
        lblBX = new javax.swing.JLabel();
        lblCX = new javax.swing.JLabel();
        lblDX = new javax.swing.JLabel();
        textPC = new javax.swing.JTextField();
        textIR = new javax.swing.JTextField();
        textAC = new javax.swing.JTextField();
        textAX = new javax.swing.JTextField();
        textBX = new javax.swing.JTextField();
        textCX = new javax.swing.JTextField();
        textDX = new javax.swing.JTextField();
        jpanelCPU2 = new javax.swing.JPanel();
        lblPC1 = new javax.swing.JLabel();
        lblIR1 = new javax.swing.JLabel();
        lblAC1 = new javax.swing.JLabel();
        lblAX1 = new javax.swing.JLabel();
        lblBX1 = new javax.swing.JLabel();
        lblCX1 = new javax.swing.JLabel();
        lblDX1 = new javax.swing.JLabel();
        textPC1 = new javax.swing.JTextField();
        textIR1 = new javax.swing.JTextField();
        textAC1 = new javax.swing.JTextField();
        textAX1 = new javax.swing.JTextField();
        textBX1 = new javax.swing.JTextField();
        textCX1 = new javax.swing.JTextField();
        textDX1 = new javax.swing.JTextField();
        jLabelCPU1 = new javax.swing.JLabel();
        jLabelCPU2 = new javax.swing.JLabel();
        jTextfieldScreen = new javax.swing.JTextField();
        jButtonEnter = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jCPU1Instruccion = new javax.swing.JTable();
        jLabelCPU3 = new javax.swing.JLabel();
        jLabelCPU4 = new javax.swing.JLabel();
        jLabelCPU2Programs = new javax.swing.JLabel();
        jLabelCPU1Programs = new javax.swing.JLabel();
        btnAutoExecute = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jContentScreen = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textfieldMemorySize.setText("Enter memory size");
        textfieldMemorySize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textfieldMemorySizeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textfieldMemorySizeFocusLost(evt);
            }
        });
        textfieldMemorySize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldMemorySizeActionPerformed(evt);
            }
        });
        textfieldMemorySize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textfieldMemorySizeKeyTyped(evt);
            }
        });
        getContentPane().add(textfieldMemorySize, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 27, 153, 38));

        btnEnterMemorySize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/memory.png"))); // NOI18N
        btnEnterMemorySize.setText("Enter");
        btnEnterMemorySize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterMemorySizeActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnterMemorySize, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 27, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setForeground(new java.awt.Color(204, 255, 255));

        btnExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/play.png"))); // NOI18N
        btnExecute.setText("Execute Step by Step");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        btnUploadFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/upload_file.png"))); // NOI18N
        btnUploadFile.setText("Upload file");
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/delete.png"))); // NOI18N
        jButton1.setText("Exit");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/clean.png"))); // NOI18N
        btnClean.setText("Clean");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        jCPU2Instruccion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jCPU2Instruccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pos", "Memory Pos", "Instruction", "Weight", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jCPU2Instruccion.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jCPU2Instruccion);
        if (jCPU2Instruccion.getColumnModel().getColumnCount() > 0) {
            jCPU2Instruccion.getColumnModel().getColumn(0).setMinWidth(50);
            jCPU2Instruccion.getColumnModel().getColumn(0).setPreferredWidth(3);
            jCPU2Instruccion.getColumnModel().getColumn(0).setMaxWidth(50);
            jCPU2Instruccion.getColumnModel().getColumn(1).setMinWidth(150);
            jCPU2Instruccion.getColumnModel().getColumn(1).setMaxWidth(150);
            jCPU2Instruccion.getColumnModel().getColumn(2).setMinWidth(200);
            jCPU2Instruccion.getColumnModel().getColumn(2).setMaxWidth(200);
            jCPU2Instruccion.getColumnModel().getColumn(3).setMinWidth(50);
            jCPU2Instruccion.getColumnModel().getColumn(3).setMaxWidth(50);
            jCPU2Instruccion.getColumnModel().getColumn(4).setMinWidth(100);
            jCPU2Instruccion.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jpanelCPU1.setBackground(new java.awt.Color(204, 255, 255));
        jpanelCPU1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpanelCPU1.setForeground(new java.awt.Color(255, 255, 255));

        lblPC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPC.setText("PC:");

        lblIR.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblIR.setText("IR:");

        lblAC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblAC.setText("AC:");

        lblAX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblAX.setText("AX:");

        lblBX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblBX.setText("BX:");

        lblCX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblCX.setText("CX:");

        lblDX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblDX.setText("DX:");

        textPC.setEditable(false);
        textPC.setBackground(new java.awt.Color(204, 255, 255));
        textPC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textPC.setText("         ");
        textPC.setBorder(null);
        textPC.setFocusable(false);

        textIR.setEditable(false);
        textIR.setBackground(new java.awt.Color(204, 255, 255));
        textIR.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textIR.setText("    ");
        textIR.setBorder(null);
        textIR.setFocusable(false);

        textAC.setEditable(false);
        textAC.setBackground(new java.awt.Color(204, 255, 255));
        textAC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textAC.setText("   ");
        textAC.setBorder(null);
        textAC.setFocusable(false);

        textAX.setEditable(false);
        textAX.setBackground(new java.awt.Color(204, 255, 255));
        textAX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textAX.setText("      ");
        textAX.setBorder(null);
        textAX.setFocusable(false);

        textBX.setEditable(false);
        textBX.setBackground(new java.awt.Color(204, 255, 255));
        textBX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textBX.setText("    ");
        textBX.setBorder(null);
        textBX.setFocusable(false);

        textCX.setEditable(false);
        textCX.setBackground(new java.awt.Color(204, 255, 255));
        textCX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textCX.setText("     ");
        textCX.setBorder(null);
        textCX.setFocusable(false);

        textDX.setEditable(false);
        textDX.setBackground(new java.awt.Color(204, 255, 255));
        textDX.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textDX.setText("     ");
        textDX.setBorder(null);
        textDX.setFocusable(false);

        javax.swing.GroupLayout jpanelCPU1Layout = new javax.swing.GroupLayout(jpanelCPU1);
        jpanelCPU1.setLayout(jpanelCPU1Layout);
        jpanelCPU1Layout.setHorizontalGroup(
            jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelCPU1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblPC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblAC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblIR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textIR, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblDX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblCX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblBX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU1Layout.createSequentialGroup()
                        .addComponent(lblAX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jpanelCPU1Layout.setVerticalGroup(
            jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelCPU1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPC)
                    .addComponent(lblAX)
                    .addComponent(textPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIR)
                    .addComponent(lblBX)
                    .addComponent(textIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAC)
                    .addComponent(lblCX)
                    .addComponent(textAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanelCPU1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDX)
                    .addComponent(textDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpanelCPU2.setBackground(new java.awt.Color(204, 255, 255));
        jpanelCPU2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpanelCPU2.setForeground(new java.awt.Color(255, 255, 255));

        lblPC1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblPC1.setText("PC:");

        lblIR1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblIR1.setText("IR:");

        lblAC1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblAC1.setText("AC:");

        lblAX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblAX1.setText("AX:");

        lblBX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblBX1.setText("BX:");

        lblCX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblCX1.setText("CX:");

        lblDX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblDX1.setText("DX:");

        textPC1.setEditable(false);
        textPC1.setBackground(new java.awt.Color(204, 255, 255));
        textPC1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textPC1.setText("         ");
        textPC1.setBorder(null);
        textPC1.setFocusable(false);

        textIR1.setEditable(false);
        textIR1.setBackground(new java.awt.Color(204, 255, 255));
        textIR1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textIR1.setText("    ");
        textIR1.setBorder(null);
        textIR1.setFocusable(false);
        textIR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIR1ActionPerformed(evt);
            }
        });

        textAC1.setEditable(false);
        textAC1.setBackground(new java.awt.Color(204, 255, 255));
        textAC1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textAC1.setText("   ");
        textAC1.setBorder(null);
        textAC1.setFocusable(false);

        textAX1.setEditable(false);
        textAX1.setBackground(new java.awt.Color(204, 255, 255));
        textAX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textAX1.setText("      ");
        textAX1.setBorder(null);
        textAX1.setFocusable(false);

        textBX1.setEditable(false);
        textBX1.setBackground(new java.awt.Color(204, 255, 255));
        textBX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textBX1.setText("    ");
        textBX1.setBorder(null);
        textBX1.setFocusable(false);

        textCX1.setEditable(false);
        textCX1.setBackground(new java.awt.Color(204, 255, 255));
        textCX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textCX1.setText("     ");
        textCX1.setBorder(null);
        textCX1.setFocusable(false);

        textDX1.setEditable(false);
        textDX1.setBackground(new java.awt.Color(204, 255, 255));
        textDX1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        textDX1.setText("     ");
        textDX1.setBorder(null);
        textDX1.setFocusable(false);

        javax.swing.GroupLayout jpanelCPU2Layout = new javax.swing.GroupLayout(jpanelCPU2);
        jpanelCPU2.setLayout(jpanelCPU2Layout);
        jpanelCPU2Layout.setHorizontalGroup(
            jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelCPU2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpanelCPU2Layout.createSequentialGroup()
                            .addComponent(lblPC1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textPC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpanelCPU2Layout.createSequentialGroup()
                            .addComponent(lblAC1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(textAC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpanelCPU2Layout.createSequentialGroup()
                        .addComponent(lblIR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textIR1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelCPU2Layout.createSequentialGroup()
                        .addComponent(lblDX1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textDX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU2Layout.createSequentialGroup()
                        .addComponent(lblCX1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textCX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU2Layout.createSequentialGroup()
                        .addComponent(lblBX1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textBX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpanelCPU2Layout.createSequentialGroup()
                        .addComponent(lblAX1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textAX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jpanelCPU2Layout.setVerticalGroup(
            jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelCPU2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPC1)
                    .addComponent(lblAX1)
                    .addComponent(textPC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textAX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIR1)
                    .addComponent(lblBX1)
                    .addComponent(textIR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAC1)
                    .addComponent(lblCX1)
                    .addComponent(textAC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpanelCPU2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDX1)
                    .addComponent(textDX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelCPU1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelCPU1.setText("CPU 1");

        jLabelCPU2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelCPU2.setText("CPU 2");

        jTextfieldScreen.setEnabled(false);

        jButtonEnter.setText("Enter");
        jButtonEnter.setEnabled(false);

        jCPU1Instruccion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jCPU1Instruccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pos", "Memory Pos", "Instruction", "Weight", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jCPU1Instruccion.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jCPU1Instruccion);
        if (jCPU1Instruccion.getColumnModel().getColumnCount() > 0) {
            jCPU1Instruccion.getColumnModel().getColumn(0).setMinWidth(50);
            jCPU1Instruccion.getColumnModel().getColumn(0).setPreferredWidth(3);
            jCPU1Instruccion.getColumnModel().getColumn(0).setMaxWidth(50);
            jCPU1Instruccion.getColumnModel().getColumn(1).setMinWidth(150);
            jCPU1Instruccion.getColumnModel().getColumn(1).setMaxWidth(150);
            jCPU1Instruccion.getColumnModel().getColumn(2).setMinWidth(200);
            jCPU1Instruccion.getColumnModel().getColumn(2).setMaxWidth(200);
            jCPU1Instruccion.getColumnModel().getColumn(3).setMinWidth(50);
            jCPU1Instruccion.getColumnModel().getColumn(3).setMaxWidth(50);
            jCPU1Instruccion.getColumnModel().getColumn(4).setMinWidth(100);
            jCPU1Instruccion.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLabelCPU3.setText("Programs in queue :");

        jLabelCPU4.setText("Programs in queue :");

        btnAutoExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ProgramImages/play.png"))); // NOI18N
        btnAutoExecute.setText("Automatic Execution");
        btnAutoExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoExecuteActionPerformed(evt);
            }
        });

        jContentScreen.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jContentScreen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jContentScreen.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jContentScreen);
        if (jContentScreen.getColumnModel().getColumnCount() > 0) {
            jContentScreen.getColumnModel().getColumn(0).setMinWidth(50);
            jContentScreen.getColumnModel().getColumn(0).setPreferredWidth(3);
            jContentScreen.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpanelCPU2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabelCPU1)
                            .addGap(39, 39, 39)
                            .addComponent(jLabelCPU3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabelCPU1Programs, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jpanelCPU1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelCPU2)
                        .addGap(45, 45, 45)
                        .addComponent(jLabelCPU4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelCPU2Programs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUploadFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAutoExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExecute)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextfieldScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jButtonEnter)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAutoExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextfieldScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonEnter))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelCPU1)
                                .addComponent(jLabelCPU3)
                                .addComponent(jLabelCPU1Programs))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jpanelCPU1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelCPU2)
                                .addComponent(jLabelCPU4)
                                .addComponent(jLabelCPU2Programs))
                            .addGap(18, 18, 18)
                            .addComponent(jpanelCPU2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        
         JFileChooser chooser = new JFileChooser();
         chooser.setMultiSelectionEnabled(true);
         FileNameExtensionFilter filter = new FileNameExtensionFilter("*.ASM","ASM");
         chooser.setFileFilter(filter);
         int selection = chooser.showOpenDialog(this);
         if(selection == JFileChooser.APPROVE_OPTION){
             
             File[] files = chooser.getSelectedFiles();
             ArrayList<String> ProgramQueue1 = new ArrayList<String>();
             ArrayList<String> ProgramQueue2= new ArrayList<String>();
             
             for (int i = 0; i < files.length; i++){
                Random rand = new Random();
                int randomValue = rand.nextInt() % 2;
                if (randomValue==0){ProgramQueue1.add( (files[i]).getAbsolutePath());}
                else{ProgramQueue2.add( (files[i]).getAbsolutePath());}
             }
             try {
                 if( (CPU1.loadInstructions(ProgramQueue1,jCPU1Instruccion)) &&  (CPU2.loadInstructions(ProgramQueue2,jCPU2Instruccion))){
                     btnExecute.setEnabled(true);
                     btnAutoExecute.setEnabled(true);
                     btnClean.setEnabled(true);
                     btnUploadFile.setEnabled(false);
                     detectCPUSQueue();
                 }else{
                     JOptionPane.showMessageDialog(this, "The available memory is not enough to load the program", "Insufficient space", JOptionPane.ERROR_MESSAGE);
                     btnClean.setEnabled(true);
                 }
                 
             } catch (IOException ex) {
                 Logger.getLogger(main_Activity.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
    }//GEN-LAST:event_btnUploadFileActionPerformed

    private void detectCPUSQueue(){
        int cpu1queue = CPU1.getRemainingPrograms();
        int cpu2queue = CPU2.getRemainingPrograms();
        jLabelCPU1Programs.setText(String.valueOf(cpu1queue));
        jLabelCPU2Programs.setText(String.valueOf(cpu2queue));
    }
    
    private void textfieldMemorySizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldMemorySizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldMemorySizeActionPerformed

    private void textfieldMemorySizeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textfieldMemorySizeFocusGained
        if (textfieldMemorySize.getText().equals("Enter memory size")){
            textfieldMemorySize.setText("");
            textfieldMemorySize.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_textfieldMemorySizeFocusGained

    private void textfieldMemorySizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textfieldMemorySizeFocusLost
         if (textfieldMemorySize.getText().equals("")){
            textfieldMemorySize.setText("Enter memory size");
            textfieldMemorySize.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_textfieldMemorySizeFocusLost

    private void textfieldMemorySizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textfieldMemorySizeKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_textfieldMemorySizeKeyTyped

    private void btnEnterMemorySizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterMemorySizeActionPerformed
        String memorySizeString = textfieldMemorySize.getText();
        CpuMemoryDialog popup = new CpuMemoryDialog(this, true);
        popup.setSize(280, 210);
        popup.setFocusable(false);
        popup.setVisible(true);
        int[] cpuMemorySizeArray = popup.getCpuMemorySize();
        CPU1.setMemorySize(cpuMemorySizeArray[0]);
        CPU2.setMemorySize(cpuMemorySizeArray[1]);
        btnUploadFile.setEnabled(true);
        JOptionPane.showMessageDialog(this, "The memory for CPU#1 is "+cpuMemorySizeArray[0]+"\n"+"The memory for CPU#2 is "+cpuMemorySizeArray[1],
                "Valid value", 
                JOptionPane.INFORMATION_MESSAGE);
      
        
    }//GEN-LAST:event_btnEnterMemorySizeActionPerformed

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        executeDualCPU();   
    }//GEN-LAST:event_btnExecuteActionPerformed
    
    private void executeDualCPU(){
        if (CPU1.getState()==1){CPU1.executeInstruction();}
        if (CPU2.getState()==1){CPU2.executeInstruction();}
    }
    
    
    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        this.dispose();
        main_Activity newFrame = new main_Activity();
        newFrame.setVisible(true);
    }//GEN-LAST:event_btnCleanActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textIR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIR1ActionPerformed

    private void btnAutoExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoExecuteActionPerformed
        active = !active;

        Thread thread = new Thread(new Runnable() {
        @Override
            public void run() {
                while (active) {
                    
                    executeDualCPU();

                    // Actualizar la interfaz gráfica
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            repaint();
                        }
                    });

                    // Agregar un delay de 2 segundos
                    try {
                        Thread.sleep(1000); // 2000 milisegundos = 2 segundos
                    } catch (InterruptedException ex) {
                        // Manejar la excepción si se interrumpe el hilo
                        ex.printStackTrace();
                    }
                }
            }
        });
        thread.start();
    }//GEN-LAST:event_btnAutoExecuteActionPerformed

    private ArrayList<JTextField> getPanelComponents(){
        ArrayList<JTextField> list = new ArrayList<JTextField>();
        Component[] components = jpanelCPU1.getComponents();
        for (Component component : components) {
            if (component.getClass().equals(JTextField.class)) {
                list.add((JTextField)component);
            }
        }
        return list;
    }
    
    private ArrayList<JTextField> getSecondPanelComponents(){
        ArrayList<JTextField> list = new ArrayList<JTextField>();
        Component[] components = jpanelCPU2.getComponents();
        for (Component component : components) {
            if (component.getClass().equals(JTextField.class)) {
                list.add((JTextField)component);
            }
        }
        return list;
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_Activity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_Activity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_Activity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_Activity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_Activity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoExecute;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnEnterMemorySize;
    private javax.swing.JButton btnExecute;
    private javax.swing.JButton btnUploadFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonEnter;
    private javax.swing.JTable jCPU1Instruccion;
    private javax.swing.JTable jCPU2Instruccion;
    private javax.swing.JTable jContentScreen;
    private javax.swing.JLabel jLabelCPU1;
    private javax.swing.JLabel jLabelCPU1Programs;
    private javax.swing.JLabel jLabelCPU2;
    private javax.swing.JLabel jLabelCPU2Programs;
    private javax.swing.JLabel jLabelCPU3;
    private javax.swing.JLabel jLabelCPU4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextfieldScreen;
    private javax.swing.JPanel jpanelCPU1;
    private javax.swing.JPanel jpanelCPU2;
    private javax.swing.JLabel lblAC;
    private javax.swing.JLabel lblAC1;
    private javax.swing.JLabel lblAX;
    private javax.swing.JLabel lblAX1;
    private javax.swing.JLabel lblBX;
    private javax.swing.JLabel lblBX1;
    private javax.swing.JLabel lblCX;
    private javax.swing.JLabel lblCX1;
    private javax.swing.JLabel lblDX;
    private javax.swing.JLabel lblDX1;
    private javax.swing.JLabel lblIR;
    private javax.swing.JLabel lblIR1;
    private javax.swing.JLabel lblPC;
    private javax.swing.JLabel lblPC1;
    private javax.swing.JTextField textAC;
    private javax.swing.JTextField textAC1;
    private javax.swing.JTextField textAX;
    private javax.swing.JTextField textAX1;
    private javax.swing.JTextField textBX;
    private javax.swing.JTextField textBX1;
    private javax.swing.JTextField textCX;
    private javax.swing.JTextField textCX1;
    private javax.swing.JTextField textDX;
    private javax.swing.JTextField textDX1;
    private javax.swing.JTextField textIR;
    private javax.swing.JTextField textIR1;
    private javax.swing.JTextField textPC;
    private javax.swing.JTextField textPC1;
    private javax.swing.JTextField textfieldMemorySize;
    // End of variables declaration//GEN-END:variables

    
    
    
    // Beginning of Interface error listener functions
    @Override
    public void onNoMoreInstructionsAndPrograms(CPUController cpu) {
         JOptionPane.showMessageDialog(this, "There are no further instructions to execute on "+cpu.getCPUName(), 
                 "List of instructions finalised", JOptionPane.INFORMATION_MESSAGE);
         if (CPU1.getState() == 0 && CPU2.getState()==0){
             JOptionPane.showMessageDialog(this, "List of instructions finalised", 
                     "There are no further instructions to execute on both cpu´s", JOptionPane.INFORMATION_MESSAGE);
             btnExecute.setEnabled(false);
             btnAutoExecute.setEnabled(false);
             active = false;
         }
    }

    @Override
    public void onInstructionNotImplemented(CPUController cpu) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    public void onLoadingFileError(CPUController cpu) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void onProgramChanged(CPUController cpu) {
        detectCPUSQueue();
    }
    
    public void onInt10h(int memoryDX) {
        JOptionPane.showMessageDialog(this, "NO LLEGO", 
                 "List of instructions finalised", JOptionPane.INFORMATION_MESSAGE);
        String[] columnNames = {"N°", "Message"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        String message = "DX value = "+ String.valueOf(memoryDX);
                    
        String data[] = {String.valueOf(screenUsed),message};
        model.addRow(data);
        screenUsed++;
        jContentScreen.setModel(model);
    }
    
    
}
